name: DevSecOps - SAST and DAST

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  sast:
    name: Static Application Security Testing
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install bandit[toml] safety
        
    - name: Run Bandit SAST scan
      run: |
        mkdir -p reports
        bandit -r . -f json -o reports/bandit-report.json || true
        bandit -r . -f txt -o reports/bandit-report.txt || true
        
    - name: Run Safety check for vulnerable dependencies
      run: |
        safety check --json --output reports/safety-report.json || true
        
    - name: Upload SAST reports
      uses: actions/upload-artifact@v3
      with:
        name: sast-reports
        path: reports/
        
    - name: Comment PR with SAST results
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v6
      with:
        script: |
          const fs = require('fs');
          try {
            const banditReport = JSON.parse(fs.readFileSync('reports/bandit-report.json', 'utf8'));
            const highIssues = banditReport.results.filter(r => r.issue_severity === 'HIGH').length;
            const mediumIssues = banditReport.results.filter(r => r.issue_severity === 'MEDIUM').length;
            const lowIssues = banditReport.results.filter(r => r.issue_severity === 'LOW').length;
            
            const comment = `## ðŸ”’ SAST Results
            
            **Security Issues Found:**
            - ðŸ”´ High: ${highIssues}
            - ðŸŸ¡ Medium: ${mediumIssues}  
            - ðŸŸ¢ Low: ${lowIssues}
            
            Please review the security findings before merging.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });
          } catch (error) {
            console.log('Could not parse SAST results:', error);
          }

  dast:
    name: Dynamic Application Security Testing
    runs-on: ubuntu-latest
    needs: sast
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Start application
      run: |
        python app.py &
        sleep 10
        
    - name: Wait for application to be ready
      run: |
        timeout 30 bash -c 'until curl -s http://localhost:5000; do sleep 1; done'
        
    - name: Run OWASP ZAP Baseline Scan
      uses: zaproxy/action-baseline@v0.10.0
      with:
        target: 'http://localhost:5000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        
    - name: Run OWASP ZAP Full Scan
      uses: zaproxy/action-full-scan@v0.8.0
      with:
        target: 'http://localhost:5000'
        rules_file_name: '.zap/rules.tsv'
        cmd_options: '-a'
        
    - name: Upload DAST reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: dast-reports
        path: |
          report_html.html
          report_json.json
          report_md.md

  security-summary:
    name: Security Summary
    runs-on: ubuntu-latest
    needs: [sast, dast]
    if: always()
    
    steps:
    - name: Download SAST reports
      uses: actions/download-artifact@v3
      with:
        name: sast-reports
        path: sast-reports/
        
    - name: Download DAST reports
      uses: actions/download-artifact@v3
      with:
        name: dast-reports
        path: dast-reports/
        
    - name: Generate Security Summary
      run: |
        echo "# ðŸ”’ DevSecOps Security Summary" > security-summary.md
        echo "" >> security-summary.md
        echo "## SAST Results" >> security-summary.md
        if [ -f "sast-reports/bandit-report.json" ]; then
          echo "- Bandit scan completed" >> security-summary.md
        fi
        echo "" >> security-summary.md
        echo "## DAST Results" >> security-summary.md
        if [ -f "dast-reports/report_json.json" ]; then
          echo "- OWASP ZAP scan completed" >> security-summary.md
        fi
        echo "" >> security-summary.md
        echo "## Recommendations" >> security-summary.md
        echo "1. Review all HIGH and MEDIUM severity findings" >> security-summary.md
        echo "2. Implement security fixes before deployment" >> security-summary.md
        echo "3. Add security tests to prevent regression" >> security-summary.md
        
    - name: Upload Security Summary
      uses: actions/upload-artifact@v3
      with:
        name: security-summary
        path: security-summary.md
