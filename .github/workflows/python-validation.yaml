# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application
env:
  default-branch: main
  python-version: "3.10"
  LESSON: "lesson4"

on: [push]
# on:
#   push:
#     branches: [ $default-branch ]
#   pull_request:
#     branches: [ $default-branch ]

permissions:
  contents: read

jobs:

  "lesson2":
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Set up Python ${python-version}
      uses: actions/setup-python@v3
      with:
        python-version: "${python-version}"
    - name: Install dependencies
      if: ${{ env.LESSON == 'lesson2' }}

      run: |
        python -m pip install --upgrade pip
        pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        pytest

  "lesson4":
    runs-on: ubuntu-latest

    # run terraform in lesson-4/live-demo directory
    # defaults:
    #   run: cd lesson-4/live-demo
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - uses: hashicorp/setup-terraform@v3
      with: 
        terraform_version: "1.11.1"
    - run: terraform init
      working-directory: lesson-4/live-demo

    - id: plan
      run: terraform plan -no-color
      working-directory: lesson-4/live-demo

    - run: echo ${{ steps.plan.outputs.stdout }}
    - run: echo ${{ steps.plan.outputs.stderr }}
    - run: echo ${{ steps.plan.outputs.exitcode }}   
    
    - id: apply
      if: ${{ env.LESSON == 'lesson4' }}
      working-directory: lesson-4/live-demo
      run: terraform apply -auto-approve -no-color
    - run: echo ${{ steps.apply.outputs.stdout }}
  # validate:
  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Lint with flake8
  #     run: |
  #       # stop the build if there are Python syntax errors or undefined names
  #       flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
  #       # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
  #       flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  #   - name: Test with pytest
  #     run: |
  #       pytest
  # test:

  #   runs-on: ubuntu-latest

  #   steps:
  #   - uses: actions/checkout@v4
  #   - name: Set up Python 3.10
  #     uses: actions/setup-python@v3
  #     with:
  #       python-version: "3.10"
  #   - name: Install dependencies
  #     run: |
  #       python -m pip install --upgrade pip
  #       pip install flake8 pytest
  #       if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
  #   - name: Test with pytest
  #     run: |
  #       pytest